import{M as g}from"./matter-BcP339-c.js";import{l as E,q as P,c as W,o as q}from"./app-Qb-HX4wO.js";import"./commonjsHelpers-Cpj98o6Y.js";const F={__name:"test",setup(L){const u=E(null);return P(()=>{console.log("进入onMounted");const{Engine:m,Render:l,Runner:f,Common:p,MouseConstraint:y,Mouse:M,Composite:c,Svg:R,Bodies:s}=g,r=m.create(),i=r.world,d=l.create({element:u.value,engine:r,options:{width:800,height:800,wireframes:!1}});l.run(d);const _=f.create();f.run(_,r);const h=s.rectangle(400,800,800,50,{isStatic:!0}),b=s.rectangle(0,300,50,800,{isStatic:!0}),w=s.rectangle(800,300,50,800,{isStatic:!0}),k=s.rectangle(400,0,800,50,{isStatic:!0});c.add(i,[h,b,w,k]);function B(e,t=15){const a=e.getTotalLength(),n=[];for(let o=0;o<a;o+=t){const x=e.getPointAtLength(o);n.push({x:x.x,y:x.y})}return n}function C(e){return fetch(e).then(t=>t.text()).then(t=>{const n=new DOMParser().parseFromString(t,"image/svg+xml"),o=Array.from(n.querySelectorAll("path"));return console.log("found paths:",o.length,o),o})}C("/images/svgs/bili.svg").then(e=>{const t=e.map(n=>B(n,20));console.log(t,"vertexsets--------");const a=t.map(n=>s.fromVertices(p.random(100,700),p.random(100,500),n,{render:{fillStyle:"#aaaaaa",strokeStyle:"#000",lineWidth:1}}));console.log(a,"bodies--------------------"),c.add(i,a)});for(let e=0;e<20;e++){const t=s.rectangle(400+e*10,200,20,20,{render:{sprite:{texture:"/images/svgs/bili.svg",xScale:1,yScale:1}}});c.add(i,t)}const v=M.create(d.canvas),A=y.create(r,{mouse:v,constraint:{stiffness:.2,render:{visible:!1}}});c.add(i,A),d.mouse=v;let S=0;g.Events.on(r,"beforeUpdate",()=>{S+=.05;const e=Math.sin(S)*50;g.Body.setPosition(h,{x:400+e,y:600+e})})}),(m,l)=>(q(),W("div",{ref_key:"scene",ref:u,class:"scene"},null,512))}};export{F as default};
