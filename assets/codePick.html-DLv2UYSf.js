import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as i,o as e}from"./app-DVhjLfOn.js";const l={};function p(r,n){return e(),a("div",null,n[0]||(n[0]=[i(`<h1 id="代码片段和一些配置" tabindex="-1"><a class="header-anchor" href="#代码片段和一些配置"><span>代码片段和一些配置</span></a></h1><ul><li><ol><li><a href="#first">参数配置</a></li></ol><ul><li>1.1. <a href="#firstPOne">epubJS</a></li></ul></li></ul><p><em>好记性不如烂笔头</em></p><h2 id="_1-epubjs配置项" tabindex="-1"><a class="header-anchor" href="#_1-epubjs配置项"><span>1. <a name="first"></a> epubJS配置项</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>type RenditionOptions = {</span></span>
<span class="line"><span>  width?: string | number; // 视图宽度</span></span>
<span class="line"><span>  height?: string | number; // 视图高度</span></span>
<span class="line"><span>  ignoreClass?: string; // 忽略类名</span></span>
<span class="line"><span>  manager?: &#39;continuous&#39; | &#39;default&#39;; // 布局管理器</span></span>
<span class="line"><span>  view?: &#39;iframe&#39; | Object | Function; // 视图容器</span></span>
<span class="line"><span>  flow?: &#39;paginated&#39; | &#39;scrolled&#39;; // 阅读方式</span></span>
<span class="line"><span>  layout?: string; // TODO: 我没看懂</span></span>
<span class="line"><span>  spread?: &#39;none&#39; | boolean; // 是否显示双页</span></span>
<span class="line"><span>  minSpreadWidth?: number; // 最小触发双页的宽度</span></span>
<span class="line"><span>  resizeOnOrientationChange?: boolean; // 在窗口 resize 时调整内容尺寸</span></span>
<span class="line"><span>  script?: string; // 注入到 View 中的 js 代码</span></span>
<span class="line"><span>  stylesheet?: string; // 注入到 View 中的 css 样式</span></span>
<span class="line"><span>  infinite?: boolean; // 是否无限翻页</span></span>
<span class="line"><span>  overflow?: string; // 设置视图的 CSS overflow 属性</span></span>
<span class="line"><span>  snap?: boolean; // 是否支持翻页</span></span>
<span class="line"><span>  defaultDirection?: string; // 阅读方向</span></span>
<span class="line"><span>  allowScriptedContent?: boolean; // iframe 沙盒是否能够执行 js</span></span>
<span class="line"><span>};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const c=s(l,[["render",p]]),o=JSON.parse(`{"path":"/content/study/codePick.html","title":"代码片段和一些配置","lang":"en-US","frontmatter":{"star":true,"tags":["animation"],"category":["study"]},"git":{"createdTime":1761302108000,"updatedTime":1761302108000,"contributors":[{"name":"lxs","username":"lxs","email":"liuxs@se-iot.cn","commits":1,"url":"https://github.com/lxs"}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"content/study/codePick.md","excerpt":"\\n<ul>\\n<li>\\n<ol>\\n<li><a href=\\"#first\\">参数配置</a></li>\\n</ol>\\n<ul>\\n<li>1.1. <a href=\\"#firstPOne\\">epubJS</a></li>\\n</ul>\\n</li>\\n</ul>\\n<p><em>好记性不如烂笔头</em></p>\\n<h2><a class=\\"header-anchor\\" href=\\"#_1-epubjs配置项\\"><span>1.  </span></a><a name=\\"first\\"></a> epubJS配置项</h2>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>type RenditionOptions = {</span></span>\\n<span class=\\"line\\"><span>  width?: string | number; // 视图宽度</span></span>\\n<span class=\\"line\\"><span>  height?: string | number; // 视图高度</span></span>\\n<span class=\\"line\\"><span>  ignoreClass?: string; // 忽略类名</span></span>\\n<span class=\\"line\\"><span>  manager?: 'continuous' | 'default'; // 布局管理器</span></span>\\n<span class=\\"line\\"><span>  view?: 'iframe' | Object | Function; // 视图容器</span></span>\\n<span class=\\"line\\"><span>  flow?: 'paginated' | 'scrolled'; // 阅读方式</span></span>\\n<span class=\\"line\\"><span>  layout?: string; // TODO: 我没看懂</span></span>\\n<span class=\\"line\\"><span>  spread?: 'none' | boolean; // 是否显示双页</span></span>\\n<span class=\\"line\\"><span>  minSpreadWidth?: number; // 最小触发双页的宽度</span></span>\\n<span class=\\"line\\"><span>  resizeOnOrientationChange?: boolean; // 在窗口 resize 时调整内容尺寸</span></span>\\n<span class=\\"line\\"><span>  script?: string; // 注入到 View 中的 js 代码</span></span>\\n<span class=\\"line\\"><span>  stylesheet?: string; // 注入到 View 中的 css 样式</span></span>\\n<span class=\\"line\\"><span>  infinite?: boolean; // 是否无限翻页</span></span>\\n<span class=\\"line\\"><span>  overflow?: string; // 设置视图的 CSS overflow 属性</span></span>\\n<span class=\\"line\\"><span>  snap?: boolean; // 是否支持翻页</span></span>\\n<span class=\\"line\\"><span>  defaultDirection?: string; // 阅读方向</span></span>\\n<span class=\\"line\\"><span>  allowScriptedContent?: boolean; // iframe 沙盒是否能够执行 js</span></span>\\n<span class=\\"line\\"><span>};</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{c as comp,o as data};
